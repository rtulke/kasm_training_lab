# roles/ansible_workspace/tasks/main.yml
---
- name: Admin-Benutzername und Passwort festlegen
  set_fact:
    admin_user: "admin@kasm.local"
    admin_password: "{{ kasm_admin_password }}"
    skip_api: true

# Direktes Docker-Handling
- name: Ansible Workspace-Container prüfen
  command: docker ps -a --filter "name=kasm_custom_ansible" --format '{{.Names}}'
  register: docker_check
  changed_when: false
  when: skip_api | bool

- name: Ansible Workspace-Container starten
  command: >
    docker run -d
    --name kasm_custom_ansible
    --network kasm_default
    --label "kasm.workspace=true"
    --label "kasm.workspace.name=Ansible Control Node"
    -e VNC_PW={{ kasm_user_password }}
    -e KASM_USER=kasm-user
    kasmweb/ubuntu-focal-desktop:latest
  when: 
    - skip_api | bool
    - docker_check.stdout != "kasm_custom_ansible"
  ignore_errors: yes

- name: Ansible in Container installieren
  command: >
    docker exec kasm_custom_ansible bash -c "apt-get update && 
    apt-get install -y ansible git python3-pip sshpass python3-paramiko &&
    mkdir -p /home/kasm-user/ansible/{playbooks,inventory,roles} &&
    chown -R kasm-user:kasm-user /home/kasm-user/ansible"
  when: 
    - skip_api | bool
    - docker_check.stdout != "kasm_custom_ansible"
  ignore_errors: yes

- name: Status-Info anzeigen
  debug:
    msg: "Ansible Control Node Workspace wurde direkt durch Docker-Befehle eingerichtet. Auf die KASM-Oberfläche zugreifen für URL-Registrierung."
  when: skip_api | bool
